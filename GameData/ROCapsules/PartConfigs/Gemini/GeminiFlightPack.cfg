PART
{

	// --- general parameters ---
	name = ROC-GeminiFlightPack
	module = Part
	author = Frizzank

	// --- asset parameters ---
	RSSROConfig = True
	MODEL
	{
		model = ROCapsules/Assets/FASA/WingGemini_FP
		scale = 1.219, 1.219, 1.219
	}
	rescaleFactor = 1.0
	scale = 1.219

	// --- node definitions ---
	node_stack_top = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -0.69, 0.0, 0.0, -1.0, 0.0, 2

	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple

	// --- editor parameters ---
	TechRequired = aerospaceTech
	entryCost = 38200
	cost = 5000
	//Catigorys for parts Pods Propulsion Control Structural Aero Utility Science
	category = Control
	subcategory = 0
	title = Gemini Flight Pack
	manufacturer = McDonnell Aircraft
	description = Decoupler, and flight pack for Winged Gemini.	 This pack has a decoupler on the bottom to jettison spent fuel tanks or engines.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,1

	stackSymmetry = 1

	// --- standard part parameters ---
	mass = 0.325
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag =0.2
	angularDrag = 0.205
	crashTolerance = 15
	breakingForce = 25
	breakingTorque = 25

	CoMOffset = 0.0, -0.35, 0.0

	
	//Thermal Stuff
	//Assuming same as Dynasoar
	//Structure and skin made of Rene 41 (max temp 1144)
	//Belly coated with Molybdenum (max temp ~2000)
	//Nose made of graphite
	//Very high emissivity paint applied to maximize radiation
	heatConductivity = 0.25		//all conductivity
	skinInternalConductionMult = 0.005	//skin-to-int conductivity
	skinMassPerArea = 8.25 //1 mm Rene 41
	thermalMassModifier = 2.0
	emissiveConstant = 0.95		//matte black

	maxTemp = 773	//delicate, lower int temp
	skinMaxTemp = 2000

	stageOffset = 1
	childStageOffset = 1

	stagingIcon = DECOUPLER_VERT



	MODULE
	{
		name = ModuleSAS
	}

	MODULE
	{
		name = ModuleDecouple
		explosiveNodeID = bottom
		isOmniDecoupler = false
		ejectionForce = 150
	}
	//Reflection shader plugin
	MODULE
	{
		name = ReflectiveShaderModule

		// Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
		CubeMapSize = 8

		// How deep the reflection will be ("how far the reflection camera will view")
		FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

		// Set to false to render all 6 faces of the CubeMap at once (six times slower~)
		OneFacePerFrame = true

		// The shader to find. The reflective shaders are:
		// Reflective/Diffuse
		// Reflective/VertexLit
		// Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
		ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

		// The height of the parallax map. Values are accepted between 0.005 and 0.08.
		ParallaxHeight = 0.01

		// How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
		ReflectionStrength = 0.2
		//ReflectionColor = 0, 0, 0, 0

		// Use this variable to specify which meshes to apply the shader to.
		// Not using this variable will default to the first found mesh.
		// Use the actual mesh name for the value. Or you could use:
		// all - to replace the shader on all meshes in the model.
		MeshesToChange = all

		// How shiny the specularity will be (if specular).
		// This value will be automatically set if it already exists on the previous shader and is not defined here.
		Shininess = 1.0
		updateRate = 10

		// These variables should be used together only.
		// These values will be automatically set if they already exist on the previous shader and are not defined here
		SpecColorR = 0.8
		SpecColorG = 0.8
		SpecColorB = 0.8
		SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.6242, 0.6445, 0.6914, 1.0
		ReflectionColor = 0.6442, 0.6445, 0.64, 1.0
	}
}

//	================================================================================
//	Override RO global settings to get our temperatures back
//	================================================================================
@PART[ROC-GeminiFlightPack]:AFTER[RealismOverhaul]
{
	@skinMaxTemp = 2000
}
